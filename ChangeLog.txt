
Installation Reminder: in your \steamapps folder locate the folder
\workshop\content\255710\455403039 you can just replace the old dll with this new one until it's pushed out via
steam workshop update.



**ChangeLog**
-----------------------
11-13-2015 -v1.2.2-f3_Build_002 (beta)
Summary: Major reworking of treedata save formate and serialize and deserialze processes.
 - removed Onplugin change related code finally, code still there in beta but it's dead code.
  only possible effect really should be for anyone with pirated version < v1.1.1

 + Changed save format version from 1 to 3. (v2 was used during testing)
 + New format adds addtional header items to the saved byte array.
   Bytes 0-1 still == ushort save format version number
   bytes 2-5 == uint32 that stores the size of the tree array when the save happened.
   bytes 6-9 == uint32 that stotes the actual count of the number of trees that were saved.
   bytes 10-13 == uint32 reserved for future use
   bytes 14-17 == uint32 reserved for future use
   bytes 18-19 == ushort Save Flags; 0=none 1= Packedflag rest == reserved for future use;    
 + All saves are now in format v3 
 + Deserialize methods will detect v1 and load using original method.
 + Deserialize methods will detect v2+ and load using new methods based on data in the header.
 + Serialize method now works as follows. First our serializer runs, if it finds that there are
   more then 266144 'created' trees it'll go ahead and save those trees in our private datastream.
   It will now only save 'created' ones not all the empty entries like it used too. Then it will
   markup the header information with how many it saved.
   Next the overridden default serializer will run, if the list of real tress is empty for some
   reason, it'll just go ahead and save everything in tree buffer up to default limit of 262144.
   If list of 'created' trees exists then it will run through that list 262144 times but inserting
   real trees first, then dummy trees if it runs out for the rest. This way we're always storing
   the first 262144 real trees in the default space of the save.

 + Added <ScaleFactor>4</ScaleFactor> to configuation file options. It is not added in gui on
   purpose.  The setting now controls the number of trees allowed in chunks of 262144.
   Valid settings are 4 (default),5,6,7,8; 4 == 1million 5=1.25million ect. If set higher then 8
   or lower then 4, then 4 will be used. This now allows up to 2million trees. It's not added to
   the gui options because this is going to be technically 'unsupported feature' even though yes
   it works and yes all the other code changes have been adjusted for everything.

 + Afore mentioned changes allows us to save adding lots of dead space to a save\map file.
   As an example a save with 300k real trees previously using the 1048576limit would save
   about 1 Megabyte in the save file space with the new method. The savings goes up\down
   depending on the number of unused trees in the scaled size one uses. 8 bytes is saved per
   unused tree, additionally trees that used to be saved as part of our extra data are now
   saved\packed down into the default range, so even more space can be saved. This has the
   added benefit that if the mod is disabled at least 262144 trees will be loaded, where as
   in the past it was luck of the draw based on what index a tree might have been saved in.
   ie if 500k trees and only 100 were in the index from 0-262144k then only 100k would be
   loaded if the mod was not loaded, now 262144k of them will be loaded.

 ~ These benefits are only noticed upon saving\resaving an existing file.
 
 

10-6-2015 - v1.2.1_Build_002
Summary: Basically just interal changes.
+ Minor enhancements for config file, add custom log feil ability, and not dumping a trace when no config file exists.
~ Refactored initialization so that we don't 'depend' on PluginChange events anymore, though if someone has an old
  version out there pre 11b\c when Onenabled\OnRemoved were added - like a pirated version we still try to work.
  Basically we now use OnEnable\OnRemove to trigger initialization.
  We also no longer fire our start up code upon the name being invoked, instead we just do that in the constructor
  which was more or less same result as before.

~ Added saving the config object to file upon the first time it gets created. This prevents the case of a new user
  loading the mod, having a 'config object' created and used, but if they never touched the options screen
  it technically never got saved and there for we would go the exception re-create route upon every load till they
  did. This is change is really just cosmetic so we don't log errors. 

~ Changed most calls from Debug.log to our own Logger.dbgLog wrapper to match above mentioned enhancement.
  Also the log wrapper automatically adds the calling method name. This saves work on my end, and also
  means we are technically storing less actual static text in our compiled dll. Only log call that doesn't use
  our new log wrapper is the initial "mod has loaded' call.

~ Comment documented more of the functions in source.


10-4-2015 - v1.2.1_Build_001
Summary: Account for other mod's exceptions causing problems. Semi-Bug fix.
+ Corrected workshopid field to be uLong not that it was actually causing a problem yet.

+ Bug fix: Adjusted for an unaccounted for case where mods before us would exception error during thier Loading.OnCreated
  callbacks, found this stops further mods down the chain from having their OnCreated()'s called.
  Unless the person was using Isolated Failures mod.
  Details: We always assumed ours got called, but I also assumed that if our correct setup was not done during OnCreated
  To try to do it during OnLevelLoaded. That was a mistake as it creates a bug in this case where
  the mod think's it's setup correctly, but upon save will think there are 1million tree buffers when there
  are still only 262k as the 'initing' of the new array size never happened during the load deserialize routine because
  it never got fired because our redirects were not active yet due to aforementioned fallout from someone elses
  exception. There is not too much we can do here other then to make sure NOT to try to setup ourselves in
  OnLevelLoaded(), which i've corrected for now. Two - encourage other modders to try{}catch{} around their god dam
  OnXXXX() overrides.
  

9-26-2015 - v1.2.0_Build_006
+ Added option to not have trees have an effect on wind like the game normally does.
  When option is enabled we redirect WindManager.CalculateSelfHeight(), and inside there in our version
  if option enabled we don't add the height of the tree to the terrain in a given area 
  to the height for the windcell.

9-25-2015 - v1.2.0_Build_005
+ reverted calculation bug in calculate Area height introduced with the prior source code fkup
  bug was difference between something being converted from float to int and back in CalculateAreaHeight().

9-25-2015 - v1.2.0_Build_004
+ Just a display name\title change from Trees Unlimiter 1.1 to Unlimited Trees Mod; internally namespace and such is
  unchanged though.

9-24-2015 - v1.2.0_Build_003
  Recovery\rebuilding of build002 due to source code fkup on my part and lost all AD changes.


9-20-2015 - v1.2.0_Build_002 
Afterdark patch update 
+ Recompiled for Afterdark update; however prior version should still work.

+ Found the root of the -1\0 tree item bug in editors that I had previously manually hacked around, 
  disabled that hack around code. Fix was a certain deserialize related line from the original that started
  at 0 instead of 1 for one of loops.

+ Split out and now re-direct calls to TreeManager.FinalizeTree() to our own. 
  Previously our ReleaseTreeimplementation() carried all the finalizetree() code inside itself instead of calling
  out... I don't know why that was originally done but for now unless there is a problem I've sperated it out
  to it's own proper redirected function.  Maybe back in 1.0.0.0 of CSL C\O had it all combined.
  I can probably not redirect ReleaseTreeimplementation() anymore now that I've done the above, but leaving for now
  till I feel safe and this version has been in the wild a while.



9-8-2015 v111c_Build_005
+ Reworked redirection\detours code to be able to reverse the patching. 
  Basically undid prior method in v003 of patching only once.
  Reworked the entire code so that we a) don't do redirection until map\game load if not already patched,
  b) un-do patching upon unloading map\game to main menu or reloading. c) revert patching upon entering asset editor.
  d) This allows asset-editor to be used while mod is turned on (or at least in my limited testing things seem to work fine now).

+ Turning on and off the plugin does not require a restart of the game, it will unload it's patching and reset things
  when toggled from enabled to disabled. This mean if you still have issues with the Asset Editor you can just
  disable the plugin and re-enter the Asset Editor without having to exit the game.

+ Minor tweak to jury rig and edge case were new maps were getting a -1 tree count (same for new assets) due to itemcount=0. 

+ Added logging option via standard gui options for mods, stored in config file TreeUnlimiterConfig.xml in root
  of CSL steam gamefolder. It's primarly just for debugging during development and unless instructed probably
  should never be needed by typical user, left in the code just in case someone runs into into issues and I need
  them to post a super detailed log.

9-6-2015 v111c_Build_003

- Removed some unneccessary logging for each redirection call, it's was just polluting the log file.
+ Added additional logging for debug purposes but conditioned them to not appear for nomal users.  
+ Added ability for the mod to work in the map editor, seems to work, extensive test not completed.
+ Had to add some code to flush\rebuild the tree buffer after a new-map; unlike game loads, fresh "new maps"
  were retaining trees loaded by a previous 'load map', very wierd.  
- Tried but failed to get the mod while using the asset editor to work right for trees with the mod loaded.
+ Changed rediction code to only fire once per CSL load.. loads on start doesn't fire upon every map load.
+ There were cases where the redirection calls were being called more times then needed, they should in theory now only
  be called once while the mod loads and not on each map load.
+ Assembly Company Name\copyright fields contains build string, done so main assembly ver stamp always
 matches C\O build# for now and a user can right click in windows and see what copy they actually have.


7-1-2015 v111c_Build_001 
Initial updates for CSL 1.1.1c compatibility (few lines added to mirror c\o function updates) nothing major.
 
